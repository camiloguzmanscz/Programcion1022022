/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Assigment8;

//import java.util.Scanner;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class App {
    
    public static final String content ="Según un estudio de una universidad inglesa, no importa el orden en el que las letras están escritas, la única cosa importante es que la primera y la última letra estén escritas en la posición correcta. El resto pueden estar totalmente mal y aún podrás leerlo sin problemas. Esto es porque no leemos cada letra por sí misma sino la palabra como un todo. Personalmente me parece increíble.";;

public static void main(String args[])
{
	Pattern pat = Pattern.compile("([\\wáéíóúñÁÉÍÓÚÑ])([\\wáéíóúñÁÉÍÓÚÑ]{2,})([\\wáéíóúñÁÉÍÓÚÑ])");
	Matcher match = pat.matcher(content);
	StringBuffer out = new StringBuffer();

	while(match.find())
		match.appendReplacement(out, match.group(1)+shuffle(match.group(2))+match.group(3));
	    
	match.appendTail(out);
	System.out.println(out);
}

public static String shuffle(String c)
{
	String out=new String();
	Random random=new Random(System.currentTimeMillis());
	int p[]=new int[c.length()],r,i;

	for(i=0, java.util.Arrays.fill(p, -1); i<c.length(); p[r]=i++)
	{
		while(p[(r=random.nextInt(c.length()))] >= 0);
		out+=c.charAt(r);
	}
		
	return out;
}
}
